- name: Get networks informations between nodes
  hosts: users
  become: true

  tasks:
  - name: install vnstat module
    tags: traffic
    apt:
      name: vnstat
      state: present
      force_apt_get: yes
  
  - name: get current traffic
    tags: traffic
    shell: vnstat -tr 10 --json
    register: command_output

  - name: get json data
    tags: traffic
    set_fact:
      jsondata: "{{ command_output.stdout | from_json }}"

  - name: rx
    tags: traffic
    set_fact:
      rx: "{{ jsondata | json_query(jmesquery) }}"
    vars:
      jmesquery: 'rx.bytespersecond'

  - name: tx
    tags: traffic
    set_fact:
      tx: "{{ jsondata | json_query(jmesquery) }}"
    vars:
      jmesquery: 'tx.bytespersecond'

  - name: Debug
    tags: traffic
    debug: msg=" RX={{ rx }}, TX={{ tx }}"






- name: Docker model run && show output
  hosts: builders
  # vars_prompt:
  #   - name: tag
  #     prompt: please enter the type of model.
  #     private: no
  vars:
    image_name: "{{ ansible_facts['architecture'] }}-model"
    model_tag: "imagenet"

  tasks:
  # - name: run container
  #   command: docker run -d --name model -it {{ image_name }}:{{ model_tag }}
  #   register: command_output
  # - debug:
  #     var: command_output.stdout_lines

  - name: model prediction
    tags: pred
    command: docker exec model python home/model.py
    register: command_output
  - debug: msg="{{command_output.stdout_lines}}"
    tags: pred






- name: Get System-Informations
  hosts: users
  gather_facts: no
  
  tasks:
  - name: cpu usage
    tags: cpu
    shell: top -b -n 1 | grep -Po '[0-9.]+ id'
    register: command_output
  - debug: msg="{{command_output.stdout}}"
    tags: cpu

  - name: storage total
    tags: storage1
    shell: df -P | grep -v ^Filesystem | awk '{sum += $2} END {print sum/1024/1024}'
    register: command_output
  - debug: msg="{{command_output.stdout}}"
    tags: storage1

  - name: storage inuse
    tags: storage2
    shell: df -P | grep -v ^Filesystem | awk '{sum += $3} END {print sum/1024/1024}'
    register: command_output
  - debug: msg="{{command_output.stdout}}"
    tags: storage2

  - name: storage capacity
    tags: storage3
    shell: df -P | grep -v ^Filesystem | awk '{sum += $4} END {print sum/1024/1024}'
    register: command_output
  - debug: msg="{{command_output.stdout}}"
    tags: storage3

  - name: memory usage
    tags: mem
    shell: cat /proc/meminfo | grep Mem
    register: command_output
  - debug: msg="{{command_output.stdout}}"
    tags: mem


  