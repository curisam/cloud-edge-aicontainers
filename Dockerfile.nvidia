# For more information, please refer to https://aka.ms/vscode-docker-python
# FROM tensorflow/tensorflow:latest-gpu
FROM nvcr.io/nvidia/cuda:11.2.0-cudnn8-runtime-ubuntu20.04

RUN apt-get update 
RUN apt-get -y install libgl1-mesa-glx

RUN apt-get install -y python3-pip python3-dev build-essential 
RUN pip3 install opencv-python
RUN pip3 install opencv-contrib-python

#RUN pip3 install -r requirements.txt
RUN pip3 install shapely disjoint_set matplotlib scipy absl-py 
RUN pip3 install tensorflow-gpu

ARG DEBIAN_FRONTEND=noninteractive
ENV TZ=Asia/Seoul
RUN apt-get install -y tzdata 
RUN apt-get install -y libglib2.0-0

# Keeps Python from generating .pyc files in the container
ENV PYTHONDONTWRITEBYTECODE=1
ENV DARKNET_PATH=/app/lib/x64

# Turns off buffering for easier container logging
ENV PYTHONUNBUFFERED=1

WORKDIR /app
COPY ./app /app

# comment download_data.sh after once downloaded to the host to avoid excess bandwidth usage
COPY yolov4.weights /app/networks/
COPY test50.mp4 /app

RUN pip3 install ai-interface-package/dist/ai_interface-0.6-py3-none-any.whl

# Creates a non-root user with an explicit UID and adds permission to access the /app folder
# For more info, please refer to https://aka.ms/vscode-docker-python-configure-containers
#RUN adduser -u 5678 --disabled-password --gecos "" appuser && chown -R appuser /app
#USER appuser

# During debugging, this entry point will be overridden. For more information, please refer to https://aka.ms/vscode-docker-python-debug
CMD ["/bin/bash"]
