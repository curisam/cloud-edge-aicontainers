- name: copy CA files & keys
  hosts: all
  tags: https
  become: true
  vars:
    host_name: keti
    registry: registry_ip_or_address
    ansible_become: true
    ansible_user: keti
    ansible_become_method: sudo
    ansible_become_pass: ketiabcs

  tasks:

    - name: copy registry CA from server to node
      copy:
        src: "/home/keti/certs/registry.crt"
        dest: "/home/{{ host_name }}/"

    - name: register CA keys step 1
      command: cp registry.crt /usr/local/share/ca-certificates/registry.crt
      register: output
    - debug: msg="{{output.stdout_lines}}"
    
    - name: register CA keys step 2
      command: echo registry.crt | sudo tee -a /etc/ca-certificates.conf
      register: output
    - debug: msg="{{output.stdout_lines}}"
    
    - name: register CA keys step 3
      command: update-ca-certificates
      register: output
    - debug: msg="{{output.stdout_lines}}"
    
    - name: register CA keys step 4
      command: sudo systemctl restart docker
      register: output
    - debug: msg="{{output.stdout_lines}}"

    - name: Registry connection test
      command : curl -k https://{{ registry }}/v2/_catalog
      register: output
    - debug: msg="{{output.stdout_lines}}"




- name: insecure-registry config update
  hosts: all
  tags: http
  vars:
    host_name: keti
    registry: deepcase.mynetgear.com:20093
    ansible_become: true
    ansible_user: keti
    ansible_become_method: sudo
    ansible_become_pass: ketiabcs

  tasks:

    # - name: generate ssh-key
    #   command: ssh-keygen -t rsa -f /root/.ssh/id_rsa -N ""
    #   register: output
    # - debug: msg="{{ output.stdout_lines }}"


    - name: configuration update
      copy: 
        content: |
          {"insecure-registries":["{{ registry }}"]}
        dest: "/etc/docker/daemon.json"

    - name: restart docker demon
      command: sudo systemctl restart docker
      register: output
    - debug: msg="{{ output.stdout_lines }}"

    - name: connection test 1
      command: curl {{ registry }}/v2/_catalog
      register: output
    - debug: msg="{{ output.stdout_lines }}"

    # - name: connection test 2
    #   command: docker pull {{ registry }}/hello-world:test
    #   register: output
    # - debug: msg="{{ output.stdout_lines }}"