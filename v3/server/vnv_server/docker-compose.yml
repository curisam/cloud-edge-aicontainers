version: '3.4'

services:

    prometheus:
        image: prom/prometheus
        container_name: prometheus
        volumes:
            - ./config/prometheus:/etc/prometheus
            - ~/.evc/prometheus:/prometheus
            - ~/.evc/prometheus/targets.json:/etc/prometheus/targets.json

        ports:
            - 9090:9090 # 접근 포트 설정 (컨테이너 외부:컨테이너 내부)
        command: # web.enalbe-lifecycle은 api 재시작없이 설정파일들을 reload 할 수 있게 해줌
            - '--web.enable-lifecycle'
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--web.console.libraries=/usr/share/prometheus/console_libraries'
            - '--web.console.templates=/usr/share/prometheus/consoles'
        restart: always
        networks:
            - vnv_network
        user: "$UID:$GID"

    # (참고) redis 기초 명령어 : https://tgyun615.com/192
    redis:
        #image: redis:alpine
        #image: redislabs/redisai:edge-cpu-bionic
        #image: redislabs/redisai:1.2.7-cpu-bionic
        image: redislabs/redisai
        container_name: redisai
        #command:
        #    - /bin/sh
        #    - -c
            # - Double dollars, so that the variable is not expanded by Docker Compose
            # - Surround by quotes, so that the shell does not split the password
            # - The ${variable:?message} syntax causes shell to exit with a non-zero
            #   code and print a message, when the variable is not set or empty
            #- redis-server --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
        ports:
            - 6379:6379
        volumes:
            - ~/.evc/redis/data:/data
        restart: always
        networks:
            - evc_network
        env_file:
            - .env
        networks:
            - vnv_network
            
    # (참고) https://hub.docker.com/r/rediscommander/redis-commander
    redis-commander:
        container_name: redis-commander
        hostname: redis-commander
        image: rediscommander/redis-commander:latest
        restart: always
        environment:
            - REDIS_HOSTS=local:redis:6379,evc:evc.re.kr:20079
            - REDIS_PASSWORD='$${REDIS_PASSWORD}'
            - HTTP_USER=temp
            - HTTP_PASSWORD=temp
        ports:
            - 8091:8081
        networks:
            - vnv_network
        env_file:
            - .env
            
    grafana:
        container_name: grafana
        image: grafana/grafana:latest
        ports:
            - 3000:3000/tcp
        environment:
            - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
            - GF_AUTH_ANONYMOUS_ENABLED=true
            - GF_AUTH_BASIC_ENABLED=false
            - GF_ENABLE_GZIP=true
            - GF_USERS_DEFAULT_THEME=light
            - GF_INSTALL_PLUGINS=redis-app
        volumes:
            - ./provisioning:/etc/grafana/provisioning
            # Uncomment to preserve Grafana configuration
            # - ./data:/var/lib/grafana
        networks:
            - vnv_network
    
networks:
    vnv_network:
        driver: bridge
