version: '3'
 
# JPark @ KETI, 2023
services:
    php:
        build:
            context: ./config/php
        ports:
            - 9000:9000
        volumes:
            - ./web:/var/www/html
            - ./config/php/www.conf:/usr/local/etc/php-fpm.d/www.conf
        #command: bash -c "docker-php-ext-install pdo pdo_mysql && docker-php-entrypoint php-fpm" # 동적으로 확장모듈 설치
        environment:
            MYSQL_USER: ${DB_USER}
            MYSQL_PASSWORD: ${DB_USER_PASSWORD}
        depends_on:
            - mariadb
        networks:
          - evc_network
 
    nginx:
        image: nginx:1.17
        ports:
            - 81:80
        volumes:
            - ./web:/var/www/html
            - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./config/nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - php
        networks:
          - evc_network
 
    pma:
        image: phpmyadmin/phpmyadmin
        environment:
            PMA_HOST: mariadb
            PMA_PORT: 3306
            MYSQL_ROOT_PASSWORD: "${DB_USER_PASSWORD}"
        ports:
            #- ${IP}:8000:80 # 보안 강력 (실제 서비스에 적용)
            - 8000:80 # 임시
        networks:
          - evc_network

    mariadb:
        image: mysql:latest    
        ports:
            #- ${IP}:3300:3306 # 보안 강력 (실제 서비스에 적용) 
            - 3306:3306 # 임시로 '${IP}:' 헤더를 제거
        command: "mysqld --init-file /data/application/init.sql"
        volumes:
            - ~/.evc/mariadb:/var/lib/mysql # maridadb data
            - ./data/mariadb/init.sql:/data/application/init.sql
        environment:
            MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
            MYSQL_DATABASE: "${DB_NAME}"
            MYSQL_USER: "${DB_USER}"
            MYSQL_PASSWORD: "${DB_USER_PASSWORD}"
        networks:
          - evc_network
            
    grafana:
        image: grafana/grafana-oss
        container_name: grafana
        # user: "$GRA_UID:$GRA_GID"
        ports:
          - 3000:3000 # 접근 포트 설정 (컨테이너 외부:컨테이너 내부)
        volumes:
          - ./config/grafana/grafana.ini:/etc/grafana/grafana.ini
          - ./config/grafana/defaults.ini:/usr/share/grafana/conf/defaults.ini
          - ./config/grafana/provisioning/:/etc/grafana/provisioning/
          - ~/.evc/grafana:/var/lib/grafana
        restart: always    
        environment:
          - GF_SERVER_ROOT_URL=http://192.168.1.6:3000/grafana/
          - GF_INSTALL_PLUGINS=grafana-clock-panel
          - GF_INSTALL_PLUGINS=grafana-worldmap-panel
          - GF_INSTALL_PLUGINS=marcusolsson-csv-datasource
          - GF_INSTALL_PLUGINS=frser-sqlite-datasource
          - GF_INSTALL_PLUGINS=grafana-simple-json-datasource
          - GF_SECURITY_ADMIN_USER=admin
          - GF_SECURITY_ADMIN_PASSWORD=admin
          - GF_AUTH_ANONYMOUS_ENABLED=true
          - GF_SECURITY_ALLOW_EMBEDDING=true
          - GF_SECURITY_LOGIN_REMEMBER_DAYS=365
          - GF_SERVER_SERVE_FROM_SUB_PATH=true
          - GF_PATHS_CONFIG=/etc/grafana/grafana.ini
          - plugins:"grafana-worldmap-panel,marcusolsson-csv-datasource,frser-sqlite-datasource,grafana-clock-panel,grafana-simple-json-datasource"
        expose:
          - 3000
        networks:
          - evc_network
        user: "$UID:$GID"

    node-exporter:
        image: prom/node-exporter:latest
        container_name: node-exporter
        restart: unless-stopped
        volumes:
          - /proc:/host/proc:ro
          - /sys:/host/sys:ro
          - /:/rootfs:ro
        command:
          - '--path.procfs=/host/proc'
          - '--path.rootfs=/rootfs'
          - '--path.sysfs=/host/sys'
          - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
        ports:
          - 9100:9100
        networks:
          - evc_network

    prometheus:
        image: prom/prometheus
        container_name: prometheus
        volumes:
          - ./config/prometheus:/etc/prometheus
          - ~/.evc/prometheus:/prometheus
        ports:
          - 9090:9090 # 접근 포트 설정 (컨테이너 외부:컨테이너 내부)
        command: # web.enalbe-lifecycle은 api 재시작없이 설정파일들을 reload 할 수 있게 해줌
          - '--web.enable-lifecycle'
          - '--config.file=/etc/prometheus/prometheus.yml'
          - '--storage.tsdb.path=/prometheus'
          - '--web.console.libraries=/usr/share/prometheus/console_libraries'
          - '--web.console.templates=/usr/share/prometheus/consoles'
        restart: always
        networks:
          - evc_network
        user: "$UID:$GID"

volumes:
    db_data:

networks:
  evc_network:
    driver: bridge




