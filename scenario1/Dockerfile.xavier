# For more information, please refer to https://aka.ms/vscode-docker-python
# FROM tensorflow/tensorflow:latest-gpu
#FROM nvcr.io/nvidia/cuda:10.2.0-cudnn8-runtime-ubuntu20.04
#FROM nvcr.io/nvidia/l4t-tensorflow:r32.6.1-tf2.5-py3 
FROM nvcr.io/nvidia/l4t-base:r32.6.1

RUN apt-get update 
RUN apt-get -y install libgl1-mesa-glx

RUN apt-get install -y python3-pip python3-dev build-essential pkg-config
RUN python3 -m pip install --upgrade pip setuptools wheel 

RUN pip3 install tqdm

ARG DEBIAN_FRONTEND=noninteractive
ENV TZ=Asia/Seoul
RUN apt-get install -y tzdata 
RUN apt-get install -y vim curl libtbb2 libtesseract4 liblapack3 libatlas-base-dev libhdf5-dev
RUN apt-get install -y qt5-default

# Keeps Python from generating .pyc files in the container
#ENV PYTHONDONTWRITEBYTECODE=1

ENV OPENBLAS_CORETYPE=ARMV8 
ENV DARKNET_PATH=/app/lib/aarch64

# Turns off buffering for easier container logging
ENV PYTHONUNBUFFERED=1

ADD requirements.txt /app/
WORKDIR /app
RUN pip3 install -r requirements.txt

COPY ./app /app

RUN pip3 install --pre --extra-index-url https://developer.download.nvidia.com/compute/redist/jp/v46 tensorflow

COPY yolov4.weights /app/networks/
COPY OpenCV-4.5.0-aarch64.tar.gz /opencv-4.5/
COPY test50.mp4 /app

WORKDIR /opencv-4.5
RUN tar -xvf OpenCV-4.5.0-aarch64.tar.gz
RUN sh OpenCV-4.5.0-aarch64.sh --skip-license --prefix=/usr/local/

WORKDIR /app
RUN pip3 install ai-interface-package/dist/ai_interface-0.6-py3-none-any.whl


# Creates a non-root user with an explicit UID and adds permission to access the /app folder
# For more info, please refer to https://aka.ms/vscode-docker-python-configure-containers
#RUN adduser -u 5678 --disabled-password --gecos "" appuser && chown -R appuser /app
#USER appuser

# During debugging, this entry point will be overridden. For more information, please refer to https://aka.ms/vscode-docker-python-debug
CMD ["/bin/bash"]
